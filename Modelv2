'''model bluethoot e AC''
 #model Corona Analytica
 r0=2; #coeff diffusione
 l=2; #livelli di profondità albero
 subjects=[]*(r0^l); #lista di lunghezza r0^l con tutte le persone;
 for i in subjects:
    subjects[i]=random(0,1)
notified_CA=sum(subjects)
print("People notified by Corona Analytica %d" % (notified_CA))

#model Bluethoot only
class Albero:
  def __init__(self, Contenuto, Sinistra=None, Destra=None):
    self.Contenuto = Contenuto
    self.Sinistra  = Sinistra
    self.Destra = Destra
  def __str__(self):
    return str(self.Contenuto)
  def status(Albero):
        return random(0,1) #1 malato, 0 sano
  def StampaAlberoPre(Albero):
        if Albero == None: return
        print (Albero.Contenuto),
        StampaAlberoPre(Albero.Sinistra)
        StampaAlberoPre(Albero.Destra)
  #somma dei contenuti
  def Totale(Albero):
        if Albero == None: return 0
        return Albero.Contenuto + Totale(Albero.Sinistra) + \
        Totale(Albero.Destra)
        
 #main bluethooth      
 Albero = Albero(1,0,1)#Albero.status, Albero(Albero.status), Albero(Albero.status))
 StampaAlberoPre(Albero)
 notified_BL=(Albero.Totale)
 print("People notified by bluetooth only %d" % (notified_BL))
 
 #efficacia: percentuale di persone che il BL si è perso rispetto il CAù
 total=r0^l;
 efficacia=(notified_CA-notified_BL)/total*100
 print("Efficacia" % (efficacia))
 
 #da inserire probabilità di avere scaricato l'applicazione e modificare probabilità di contagio, qui è 0 o 1 (al 50%)?
